<UserControl x:Class="D2SE.UI.Views.SettingsPage"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:D2SE.UI.Views"
             mc:Ignorable="d" 
             d:DesignHeight="220" 
             d:DesignWidth="270"
             TextBlock.Foreground="White"
             TextBlock.FontFamily="Roboto"
             Background="#13171C">
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <!-- Title text -->
        <TextBlock Grid.Row="0"
           Text="Settings"
           FontFamily="Roboto Medium" FontSize="14"
           Margin="0,0,0,20"/>

        <!-- Settings toggle area -->
        <Grid Grid.Row="1">

            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*" />
            </Grid.ColumnDefinitions>


            <CheckBox Content="Enable always-on-top" 
                Margin="0 5 0 5"
                Foreground="White"
                Grid.Column="0" Grid.Row="0"
                IsChecked="{Binding Settings.AlwaysOnTop, Mode=TwoWay}" />

            <CheckBox Content="Enable hotkey (Alt + Shift + K)" 
                Margin="0 5 0 5"
                Foreground="White"
                Grid.Column="0" Grid.Row="1"
                IsChecked="{Binding Settings.EnableHotkey, Mode=TwoWay}" />

            <CheckBox Content="Persist firewall rules" 
                ToolTip="Should firewall rules related to the Destiny 2 Solo-Enabler program persist even when the application is closed? &#x0a;By default, these rules are set to be auto-deleted upon closing the program."
                Margin="0 5 0 5"
                Foreground="White"
                Grid.Column="0" Grid.Row="2"
                IsChecked="{Binding Settings.PersistentRules, Mode=TwoWay}" />

            <!--<CheckBox Content="Invert Solo-Play functionality" 
                ToolTip='Enabled should be treated as "I wanna play with other people", while Disabled should be treated as "I wanna play solo". Thus, inverting the functionality of the program'
                Margin="0 5 0 5"
                Foreground="White"
                Grid.Column="0" Grid.Row="3"
                IsChecked="{Binding Settings.InvertFunctionality, Mode=TwoWay}" />-->

            <CheckBox Content="Enable notifications" 
                ToolTip='Decide whether or not you want to recieve notifications about actions taken by the program'
                Margin="0 5 0 5"
                Foreground="White"
                Grid.Column="0" Grid.Row="3"
                IsChecked="{Binding Settings.EnableNotifications, Mode=TwoWay}" />

            <StackPanel Grid.Column="0" Grid.Row="4" Margin="0 0 0 0">
                <CheckBox x:Name="OverridePortsCheckBox" 
                          Content="Override ports to block" 
                          ToolTip='Enable the use of custom port blocking, thus overriding the default set by the program'
                          Margin="0 5 0 5"
                          Foreground="White"
                          IsChecked="{Binding Settings.OverridePortsToBlock, Mode=TwoWay}" />
                <TextBox Name="Content" IsEnabled="{Binding IsChecked, ElementName=OverridePortsCheckBox}" Text="{Binding Settings.CustomPortRangeToBlock, Mode=TwoWay}"  />
            </StackPanel>


        </Grid>


        <!--Close button-->
        <Button Grid.Row="3"
            Content="Close"
            HorizontalAlignment="Left"
            Margin="0,0,5,-5" 
            Command="{Binding CloseWithoutSavingCommand}" 
            Style="{DynamicResource HyperlinkButton}" />

        <Button Grid.Row="3"
            Content="Save"
            HorizontalAlignment="Right"
            Margin="0,0,5,-5"
            Command="{Binding CloseAndSaveCommand}"
            Style="{DynamicResource HyperlinkButton}"/>
    </Grid>
</UserControl>
